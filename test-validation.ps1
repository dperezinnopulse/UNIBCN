# Test de validaci√≥n - Actividad sin t√≠tulo
Write-Host "=== TEST VALIDACI√ìN - ACTIVIDAD SIN T√çTULO ===" -ForegroundColor Green

# 1. Login
Write-Host "1. Haciendo login con usuario SAE..." -ForegroundColor Yellow
try {
    $loginResponse = Invoke-RestMethod -Uri "http://localhost:5001/api/auth/login" -Method POST -ContentType "application/json" -Body '{"username":"SAE","password":"SAE"}'
    $token = $loginResponse.token
    Write-Host "   ‚úÖ Login exitoso" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå Error en login: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# 2. Intentar crear actividad sin t√≠tulo
Write-Host "2. Intentando crear actividad SIN t√≠tulo..." -ForegroundColor Yellow
try {
    $headers = @{
        'Content-Type' = 'application/json'
        'Authorization' = "Bearer $token"
    }
    
    # Datos sin t√≠tulo (deber√≠a fallar)
    $actividadData = @{
        Titulo = ""  # T√≠tulo vac√≠o
        UnidadGestionId = 1
    } | ConvertTo-Json
    
    $response = Invoke-RestMethod -Uri "http://localhost:5001/api/actividades" -Method POST -Headers $headers -Body $actividadData
    Write-Host "   ‚ö†Ô∏è  PROBLEMA: Se cre√≥ actividad sin t√≠tulo (ID: $($response.id))" -ForegroundColor Yellow
    Write-Host "   üìã T√≠tulo: '$($response.titulo)'" -ForegroundColor Cyan
    
} catch {
    Write-Host "   ‚úÖ CORRECTO: Error esperado al crear actividad sin t√≠tulo" -ForegroundColor Green
    Write-Host "   üìã Error: $($_.Exception.Message)" -ForegroundColor Cyan
}

Write-Host "=== TEST DE VALIDACI√ìN COMPLETADO ===" -ForegroundColor Green
