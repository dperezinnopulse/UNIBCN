# Test de redirecci√≥n despu√©s de crear actividad
Write-Host "=== TEST REDIRECCI√ìN DESPU√âS DE CREAR ACTIVIDAD ===" -ForegroundColor Green

# 1. Login
Write-Host "1. üîê Login como usuario SAE..." -ForegroundColor Yellow
try {
    $loginResponse = Invoke-RestMethod -Uri "http://localhost:5001/api/auth/login" -Method POST -ContentType "application/json" -Body '{"username":"SAE","password":"SAE"}'
    $token = $loginResponse.token
    Write-Host "   ‚úÖ Login exitoso" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå Error en login: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# 2. Crear actividad
Write-Host "2. üìù Creando actividad..." -ForegroundColor Yellow
try {
    $headers = @{'Content-Type'='application/json'; 'Authorization'="Bearer $token"}
    $actividadData = @{
        Titulo = "Test Redirecci√≥n - Actividad ID Check"
        UnidadGestionId = 1
    } | ConvertTo-Json
    
    $response = Invoke-RestMethod -Uri "http://localhost:5001/api/actividades" -Method POST -Headers $headers -Body $actividadData
    Write-Host "   ‚úÖ Actividad creada exitosamente:" -ForegroundColor Green
    Write-Host "      üìã ID: $($response.id)" -ForegroundColor Cyan
    Write-Host "      üìã T√≠tulo: $($response.titulo)" -ForegroundColor Cyan
    
    # 3. Verificar que la URL de redirecci√≥n ser√≠a correcta
    $redirectUrl = "editar-actividad.html?id=$($response.id)"
    Write-Host "3. üîó URL de redirecci√≥n que se generar√≠a:" -ForegroundColor Yellow
    Write-Host "   $redirectUrl" -ForegroundColor Cyan
    
    # 4. Verificar que la actividad se puede recuperar con ese ID
    Write-Host "4. üîç Verificando que la actividad se puede recuperar..." -ForegroundColor Yellow
    $actividad = Invoke-RestMethod -Uri "http://localhost:5001/api/actividades/$($response.id)" -Method GET -Headers $headers
    Write-Host "   ‚úÖ Actividad recuperada correctamente" -ForegroundColor Green
    Write-Host "      üìã T√≠tulo: $($actividad.titulo)" -ForegroundColor Cyan
    
} catch {
    Write-Host "   ‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host "=== ‚úÖ TEST COMPLETADO - REDIRECCI√ìN FUNCIONAR√Å CORRECTAMENTE ===" -ForegroundColor Green
